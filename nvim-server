#!/usr/bin/env python3
import os
import signal
import subprocess
import sys
from pathlib import Path


def start_nvim(path, port):
    return subprocess.Popen(
        ["nvim", "--listen", f"localhost:{port}", "."],
        cwd=str(path),
        preexec_fn=os.setsid,  # This creates a new process group
    )


def main():
    if len(sys.argv) != 3:
        print("[SERVER] Usage: nvim-server <path> <port>")
        sys.exit(1)

    path = Path(sys.argv[1]).resolve()
    port = int(sys.argv[2])

    if not path.exists():
        print(f"[SERVER] Error: Path {path} does not exist")
        sys.exit(1)

    print(f"[SERVER] Starting Neovim server in directory: {path}")
    print(f"[SERVER] Listening on port: {port}")

    def signal_handler(signum, frame):
        print("[SERVER] Received termination signal. Shutting down...")
        sys.exit(0)

    signal.signal(signal.SIGTERM, signal_handler)

    while True:
        nvim_process = start_nvim(path, port)
        print("[SERVER] Neovim instance started")

        try:
            nvim_process.wait()
        except KeyboardInterrupt:
            print("[SERVER] Keyboard interrupt received. Shutting down...")
            break
        finally:
            # Terminate the entire process group
            os.killpg(os.getpgid(nvim_process.pid), signal.SIGTERM)

        print("[SERVER] Neovim instance terminated. Restarting...")


if __name__ == "__main__":
    main()
